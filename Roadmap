# SSTV Groundstation — Phase 2 Roadmap

## Objective
Evolve the current web interface into a **full groundstation control and automation platform** — capable of predicting passes, scheduling SDR activity, recording and decoding SSTV transmissions, and managing data retention.

---

## 1. Automated TLE Collection
**Purpose:** Keep orbital data fresh for accurate pass predictions.  
**Implementation Plan:**
- Extend `update_all_tles.py` to run on a schedule (via cron or APScheduler).
- Store last update timestamp in a small database or JSON for UI display.
- Allow manual refresh from the TLE viewer (already implemented).

---

## 2. Pass Prediction Engine
**Purpose:** Know exactly when satellites will be overhead and worth recording.  
**Implementation Plan:**
- Use `skyfield` or `pyephem` to calculate passes from TLE data.
- Filter by:
  - Date range (e.g., next N days)
  - Minimum elevation (exclude low passes)
- Store results in a database for quick retrieval.
- Display in a new **Pass Schedule** page in the UI.

---

## 3. Recording Scheduler
**Purpose:** Automate SDR recordings only during relevant passes.  
**Implementation Plan:**
- Integrate with `rtl_fm`, `rtl_sdr`, or other SDR control tools.
- Trigger start/stop based on pass schedule.
- Save recordings to a `recordings/` folder with timestamped filenames.
- Optionally power up/down SDR hardware to save energy.

---

## 4. SSTV Decoding Pipeline
**Purpose:** Automatically extract SSTV images from recordings.  
**Implementation Plan:**
- Use `qsstv`, `msstv`, or Python SSTV decoder libraries in batch mode.
- Output decoded images to `images/` so they appear in the gallery.
- Log decode results (success/failure, mode used, etc.).

---

## 5. Recording Cleanup
**Purpose:** Save storage by removing useless recordings.  
**Implementation Plan:**
- After decoding, check if valid SSTV images were produced.
- If none, delete the recording or move to an `archive/` folder.

---

## 6. UI Enhancements
**Pass Schedule Page:**
- Table of upcoming passes (time, satellite, max elevation, duration).
- Filters for date range and min elevation.
- Buttons to include/exclude satellites.

**Settings Page:**
- Configure min elevation, number of days to show, SDR settings, recording path, etc.

**Status Indicators:**
- Show when SDR is active.
- Show next scheduled pass.

---

## 7. Future Extensions
- Multi‑SDR support.
- Live waterfall display during passes.
- Integration with SatNOGS network for pass predictions.
- Alerts (email, Telegram) before a pass starts.
- Web‑based TLE management (add/remove satellites from schedule).

---

## Proposed Build Order
1. **Pass prediction module** (foundation for all scheduling).
2. **Automated TLE updates** (fully hands‑off).
3. **Recording scheduler** (start/stop SDR).
4. **SSTV decoding pipeline**.
5. **Pass schedule UI**.
6. **Cleanup automation**.
7. **Advanced features** (alerts, multi‑SDR, live view).

---

## Phase 2 Architecture

                               
